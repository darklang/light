[expected-request]
POST PATH HTTP/1.1
Accept: */*
Accept-Encoding: deflate, gzip, br
Content-Type: application/x-www-form-urlencoded; charset=utf-8
Host: HOST

{
  "var1": 2,
  "var2": []
}
[response]
HTTP/1.1 200 OK
Date: xxx, xx xxx xxxx xx:xx:xx xxx
Content-type: text/plain; charset=utf-8
Content-Length: LENGTH

[test]
// CLEANUP: clearly it should actually use form encoding here, right?
(let reqHeaders = {"Content-Type" = "application/x-www-form-urlencoded; charset=utf-8" }
 let reqBody = { var1 = 2; var2 = [] }
 let response = HttpBaseClient.request_ster "post" "http://URL" reqBody {} reqHeaders
 let respHeaders = response.headers |> List.filter_v2 (fun h -> Tuple2.first h <> "date")
Dict.set_v0 response "headers" respHeaders) =
   { body = ""
     statusCode = 200
     headers =
      [
        ("content-type", "text/plain; charset=utf-8")
        "Transfer-Encoding" = "chunked"
        ("server", "kestrel")
      }
     raw = ""}
