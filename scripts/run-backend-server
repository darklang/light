#!/usr/bin/env bash
. ./scripts/devcontainer/_assert-in-container "$0" "$@"

set -euo pipefail

PUBLISHED=false
RESTART=true

for i in "$@"
do
  case "${i}" in
    --published)
    PUBLISHED=true
    shift
    ;;
  esac
  case "${i}" in
    --restart=no)
    RESTART=false
    shift
    ;;
  esac
done

# If servers are running and we don't need to restart, then don't
RUNNING=true
if [[ $(pgrep BwdServer -c) -eq 0 ]]; then RUNNING=false; fi
if [[ $(pgrep CronChecker -c) -eq 0 ]]; then RUNNING=false; fi
if [[ $(pgrep QueueWorker -c) -eq 0 ]]; then RUNNING=false; fi
if [[ $(pgrep Executor -c) -eq 0 ]]; then RUNNING=false; fi
# TODO pubsub and tunnel


if [[ "${RUNNING}" == "true" && "${RESTART}" == "false" ]]; then
  echo "Servers are running and we don't need to restart"
  exit 0
fi

if [[ "$PUBLISHED" == "true" ]]; then
  BWDSERVER_BINPATH="backend/Build/out/BwdServer/Release/net6.0/linux-x64/publish"
  CRONCHECKER_BINPATH="backend/Build/out/CronChecker/Release/net6.0/linux-x64/publish"
  QUEUEWORKER_BINPATH="backend/Build/out/QueueWorker/Release/net6.0/linux-x64/publish"
  EXECHOST_BINPATH="backend/Build/out/ExecHost/Release/net6.0/linux-x64/publish"
  EXECUTOR_BINPATH="backend/Build/out/Executor/Release/net6.0/linux-x64/publish"
else
  BWDSERVER_BINPATH="backend/Build/out/BwdServer/Debug/net6.0/linux-x64"
  CRONCHECKER_BINPATH="backend/Build/out/CronChecker/Debug/net6.0/linux-x64"
  QUEUEWORKER_BINPATH="backend/Build/out/QueueWorker/Debug/net6.0/linux-x64"
  EXECHOST_BINPATH="backend/Build/out/ExecHost/Debug/net6.0/linux-x64"
  EXECUTOR_BINPATH="backend/Build/out/Executor/Debug/net6.0/"
fi

LOGS="${DARK_CONFIG_RUNDIR}/logs"

BWDSERVER_EXE="${BWDSERVER_BINPATH}/BwdServer"
CRONCHECKER_EXE="${CRONCHECKER_BINPATH}/CronChecker"
QUEUEWORKER_EXE="${QUEUEWORKER_BINPATH}/QueueWorker"
EXECHOST_EXE="${EXECHOST_BINPATH}/ExecHost"
EXECUTOR_EXE="${EXECUTOR_BINPATH}/Executor"

# Stop the server processes
echo "Stopping servers"
sudo pkill -f "BwdServer" || true
sudo pkill -f "CronChecker" || true
sudo pkill -f "QueueWorker" || true
sudo pkill -f "Executor" || true

# Executor doesn't need all the other stuff
echo "Running Executor"
"${EXECUTOR_EXE}" serve --port=3275 --debug > "$LOGS/executor.log" 2>&1 &

./scripts/run-pubsub-emulator
./scripts/run-cloud-storage-emulator
./scripts/run-httptunnel

echo "Waiting for postgres"
./scripts/devcontainer/_wait-for-background-services postgresql

# if it hasn't been compiled yet, wait for it
echo "Waiting for compiled servers"
for ((i=1;i<=1000;i++));
do
  if [[ ! -f "${BWDSERVER_EXE}" || ! -f "${CRONCHECKER_EXE}" || ! -f "${QUEUEWORKER_EXE}" || ! -f "${EXECHOST_EXE}" ]]; then
    sleep 0.01
  fi
done
echo "Done waiting for compiled servers"

echo "Running migrations"
"${EXECHOST_EXE}" migrations run > "$LOGS/migrations.log" 2>&1
echo "Running bwdserver"
"${BWDSERVER_EXE}" > "$LOGS/bwdserver.log" 2>&1 &
echo "Running cronchecker"
"${CRONCHECKER_EXE}" > "$LOGS/cronchecker.log" 2>&1 &
echo "Running queueworker"
"${QUEUEWORKER_EXE}" > "$LOGS/queueworker.log" 2>&1 &

echo "Finished loading server"
